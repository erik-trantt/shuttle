# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy React app to GitHub Pages

on:
  push:
    branches: [ "publish-gh-pages" ]
  workflow_dispatch:

jobs:
  # Build job
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    steps:
    # checkout the repository content to github runner
    - uses: actions/checkout@v4

     # setup nodejs environment
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
         
    - name: Restore cache dependencies
      uses: actions/cache@v4
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # install dependencies
    - name: Install dependencies
      run: npm ci

    # build the react app
    - name: Build
      run: npm run build

    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist/

  # Deploy job
  # Deploy the react app to github pages
  deploy:
    # Add a dependency to the build job
    needs: build

    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    steps:
      # https://github.com/peaceiris/actions-gh-pages
      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v4
      #   # if: github.ref == 'refs/heads/main'
      #   with:
      #     # NOTE: GITHUB_TOKEN is a secret token that is automatically generated by GitHub
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_branch: gh-pages
      #     publish_dir: ./dist # directory to deploy

      # https://github.com/actions/deploy-pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action

